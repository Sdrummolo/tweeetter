{"version":3,"sources":["components/AddComment/AddComment.module.css","components/Spinner/Spinner.module.css","components/Likes/Likes.module.css","components/Comment/Comment.module.css","components/Comments/Comments.module.css","components/CommentsContainer/CommentsContainer.module.css","context/tweeetterContext.js","components/NewTweet/NewTweet.js","components/Spinner/Spinner.js","components/Tweet/Tweet.js","components/TweetsContainer/TweetsContainer.js","components/Comment/Comment.js","components/CommentsContainer/CommentsContainer.js","components/AddComment/AddComment.js","components/Likes/Likes.js","components/Comments/Comments.js","components/TweetPage/TweetPage.js","components/App/App.js","context/tweeetterReducer.js","context/TweeetterState.js","index.js","components/TweetPage/TweetPage.module.css","components/Tweet/Tweet.module.css"],"names":["module","exports","TweeetterContext","createContext","NewTweet","postTweet","useContext","useState","input","setInput","onSubmit","e","preventDefault","newTweet","id","uuid","user","pic","body","likes","isLiked","comments","type","maxLength","placeholder","value","onChange","target","required","Spinner","className","styles","spinner","circle","Tweet","data","likeTweet","to","onClick","tweetContainer","imgContainer","src","alt","tweetContent","username","stats","style","color","length","TweetsContainer","tweets","feed","map","key","Comment","comment","text","commentContent","Comments","commentsContainer","AddComment","handleClick","closeModal","addComment","inputRef","useRef","useEffect","current","focus","modal","header","tweet","form","ref","Likes","handleLike","iconContainer","amount","TweetPage","match","setTweet","showModal","setShowModal","filter","params","nav","tweetPage","post","tweetText","CommentsContainer","App","getTweets","isLoading","path","exact","render","props","component","state","action","payload","store","require","TweeetterState","useReducer","TweeetterReducer","dispatch","set","a","setLoading","get","users","posts","fetch","request","json","response","console","log","results","createPosts","setTimeout","generateComments","Number","Math","random","toFixed","i","name","first","last","picture","medium","push","Provider","children","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.54295a22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"AddComment_modal__2_AWA\",\"tweet\":\"AddComment_tweet__1R8pi\",\"body\":\"AddComment_body__29RbU\",\"header\":\"AddComment_header__3nN2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\",\"spinnerHide\":\"Spinner_spinnerHide__3i5nw\",\"circle\":\"Spinner_circle__2X_tM\",\"bounce\":\"Spinner_bounce__2YkZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"likes\":\"Likes_likes__2nliY\",\"amount\":\"Likes_amount__2i97j\",\"iconContainer\":\"Likes_iconContainer__2Kvz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__2SmJa\",\"commentContent\":\"Comment_commentContent__t-BQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2-b4q\",\"iconContainer\":\"Comments_iconContainer__1ru5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsContainer\":\"CommentsContainer_commentsContainer__2E7Ay\"};","import { createContext } from 'react'\n\nconst TweeetterContext = createContext()\n\nexport default TweeetterContext","import React, { useState, useContext } from 'react'\nimport uuid from 'react-uuid'\n\nimport TweeetterContext from '../../context/tweeetterContext'\n\nconst NewTweet = () => {\n   const { postTweet } = useContext(TweeetterContext)\n   const [input, setInput] = useState('')\n\n   const handleChange = (e) => {\n      setInput(e.target.value)\n   }\n\n   const handleSubmit = (e) => {\n      e.preventDefault()\n\n      const newTweet = {\n         id: uuid(),\n         user: 'Demo-User',\n         pic: 'https://abs.twimg.com/sticky/default_profile_images/default_profile_reasonably_small.png',\n         body: input,\n         likes: 0,\n         isLiked: false,\n         comments: []\n      }\n\n      setInput('')\n      postTweet(newTweet)\n   }\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <textarea\n            type=\"text\"\n            maxLength=\"140\"\n            placeholder=\"What's happening?\"\n            value={input}\n            onChange={handleChange}\n            required\n         />\n         <button type=\"submit\">Tweet</button>\n      </form>\n   )\n}\nexport default NewTweet\n","import React from 'react'\n\nimport styles from './Spinner.module.css'\n\nconst Spinner = () => {\n   return (\n      <div className={styles.spinner}>\n         <div className={styles.circle}></div>\n         <div className={styles.circle}></div>\n         <div className={styles.circle}></div>\n      </div>\n   )\n}\n\nexport default Spinner","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './Tweet.module.css'\n\nimport TweeetterContext from '../../context/tweeetterContext'\n\nconst Tweet = ({ data }) => {\n   const { likeTweet } = useContext(TweeetterContext)\n   const { id, user, pic, likes, body, isLiked, comments } = data\n\n   const handleClick = (e) => {\n      if (e.target.className === 'far fa-heart' || e.target.className === 'fas fa-heart') {\n         e.preventDefault()\n         likeTweet(id)\n      }\n   }\n\n   return (\n      <Link to={`/tweet/${id}`} onClick={handleClick}>\n         <div className={styles.tweetContainer}>\n            <div className={styles.imgContainer}>\n               <img src={pic} alt=\"profile-pic\" />\n            </div>\n\n            <div className={styles.tweetContent}>\n               <h4 className={styles.username}>{user}</h4>\n               <p>{body}</p>\n\n               <div className={styles.stats}>\n\n                  <div\n                     className={styles.likes}\n                     style={isLiked ? { color: '#E0245E' } : null}\n                  >\n                     <i\n                        className={isLiked ? 'fas fa-heart' : 'far fa-heart'}\n                     />\n                     <small>{likes}</small>\n                  </div>\n\n                  <div className={styles.comments}>\n                     <i className=\"far fa-comment\" />\n                     <small>{comments.length}</small>\n                  </div>\n\n               </div>\n            </div>\n         </div>\n      </Link>\n   )\n}\n\nexport default Tweet","import React, { useContext } from 'react'\nimport Tweet from '../Tweet/Tweet'\n\nimport TweeetterContext from '../../context/tweeetterContext'\n\nconst TweetsContainer = () => {\n   const { tweets } = useContext(TweeetterContext)\n\n   if (!tweets) {\n      return null\n   }\n\n   const feed = tweets.map(data => {\n      return (<Tweet key={data.id} data={data} />)\n   })\n\n   return (\n      <div className=\"tweetsContainer\">\n         {feed}\n      </div>\n   )\n}\n\nexport default TweetsContainer","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './Comment.module.css'\n\nconst Comment = ({ comment }) => {\n   const { pic, text, user } = comment\n\n   return (\n      <div className={styles.comment}>\n\n         <img src={pic} alt=\"user\" />\n\n         <div className={styles.commentContent}>\n            <h4>{user}</h4>\n            <p>{text}</p>\n         </div>\n\n      </div>\n   )\n}\n\nComment.propTypes = {\n   comment: PropTypes.object.isRequired,\n}\n\nexport default Comment\n","import React from 'react'\nimport uuid from 'react-uuid'\nimport Comment from '../Comment/Comment'\nimport PropTypes from 'prop-types'\n\nimport styles from './CommentsContainer.module.css'\n\nconst Comments = ({ comments }) => {\n   return (\n      <div className={styles.commentsContainer}>\n         {comments.map(comment => {\n            return (\n               <Comment key={uuid()} comment={comment} />\n            )\n         })}\n      </div>\n   )\n}\n\nComments.propTypes = {\n   comments: PropTypes.array.isRequired\n}\n\nexport default Comments\n","import React, { useState, useContext, useEffect, useRef } from 'react'\n\nimport styles from './AddComment.module.css'\nimport TweeetterContext from '../../context/tweeetterContext'\n\nconst AddComment = ({ handleClick, closeModal, id, user, body }) => {\n   const { addComment } = useContext(TweeetterContext)\n   const [input, setInput] = useState('')\n   const inputRef = useRef(null);\n\n   const handleChange = (e) => {\n      setInput(e.target.value)\n   }\n\n   // Creates new comment and adds it in state\n   const handleSubmit = (e) => {\n      e.preventDefault()\n\n      const comment = {\n         pic: 'https://abs.twimg.com/sticky/default_profile_images/default_profile_reasonably_small.png',\n         user: 'Demo-User',\n         text: input\n      }\n\n      addComment(id, comment)\n      setInput('')\n      closeModal()\n   }\n\n   // Sets focus on the textarea on render\n   useEffect(() => {\n      inputRef.current.focus()\n   }, [])\n\n\n   return (\n      <div className='modal-container' onClick={handleClick}>\n         <div className={styles.modal}>\n\n            <div className={styles.header}>\n               <i className=\"fas fa-times fa-lg\"\n                  onClick={handleClick}\n               />\n            </div>\n\n            <div className={styles.tweet}>\n               <img src='https://abs.twimg.com/sticky/default_profile_images/default_profile_reasonably_small.png' alt=\"user\" />\n\n               <div className={styles.body}>\n                  <h4 className={styles.user}>{user}</h4>\n                  <p className={styles.text}>{body}</p>\n               </div>\n\n            </div>\n\n            <div className={styles.form}>\n               <form onSubmit={handleSubmit}>\n                  <textarea\n                     placeholder=\"Tweet your reply\"\n                     value={input}\n                     onChange={handleChange}\n                     ref={inputRef}\n                     required\n                  >\n                  </textarea>\n                  <button type=\"submit\">Reply</button>\n               </form>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default AddComment","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './Likes.module.css'\n\nconst Likes = ({ likes, isLiked, handleLike }) => {\n\n   return (\n      <div className={styles.likes}\n         style={isLiked ? { color: '#E0245E' } : null}\n      >\n         <div className={styles.iconContainer}>\n            <i className={isLiked ? 'fas fa-heart fa-lg' : 'far fa-heart fa-lg'}\n               onClick={handleLike}\n            />\n         </div>\n         <h4 className={styles.amount}>{likes}</h4>\n      </div>\n   )\n}\n\nLikes.propTypes = {\n   likes: PropTypes.number.isRequired,\n   isLiked: PropTypes.bool.isRequired,\n   handleLike: PropTypes.func.isRequired\n}\n\nexport default Likes","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './Comments.module.css'\n\nconst Comments = ({ handleClick, comments }) => {\n   return (\n      <div className={styles.comments}>\n         <div className={styles.iconContainer}>\n            <i className=\"far fa-comment fa-lg\"\n               onClick={handleClick}\n            />\n         </div>\n         <h4>{comments.length}</h4>\n      </div>\n   )\n}\n\nComments.propTypes = {\n   handleClick: PropTypes.func.isRequired,\n   comments: PropTypes.array.isRequired\n}\n\nexport default Comments\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport CommentsContainer from '../CommentsContainer/CommentsContainer'\nimport AddComment from '../AddComment/AddComment'\nimport Likes from '../Likes/Likes'\nimport Comments from '../Comments/Comments'\n\nimport styles from './TweetPage.module.css'\nimport TweeetterContext from '../../context/tweeetterContext'\n\n\nconst TweetPage = ({ match }) => {\n   const { tweets, likeTweet } = useContext(TweeetterContext)\n   const [tweet, setTweet] = useState(null)\n   const [showModal, setShowModal] = useState(false)\n\n   useEffect(() => {\n      setTweet(tweets.filter(tweet => tweet.id === match.params.id)[0])\n   }, [tweets, match.params.id])\n\n   const handleClick = (e) => {\n      if (e.target.className === 'fas fa-times fa-lg'\n         || e.target.className === 'modal-container'\n         || e.target.className === 'far fa-comment fa-lg') {\n         setShowModal(!showModal)\n      }\n   }\n\n   const handleLike = (e) => {\n      likeTweet(tweet.id)\n   }\n\n   const closeModal = () => {\n      setShowModal(false)\n   }\n\n\n   // Avoid rendering before tweet is fetched from context\n   if (!tweet) {\n      return null\n   } else {\n      const { user, pic, body, likes, comments, isLiked, id } = tweet\n\n      return (\n         <>\n            <div className={styles.nav}>\n               <Link to={'/'}>\n                  <div className={styles.iconContainer}>\n                     <i className=\"fas fa-arrow-left fa-lg\"></i>\n                  </div>\n               </Link>\n               <h1>Tweet</h1>\n            </div>\n\n            <div className={styles.tweetPage}>\n               <div className={styles.user}>\n                  <img src={pic} alt=\"profile-pic\" />\n                  <h4 className={styles.username}>{user}</h4>\n               </div>\n\n               <div className={styles.post}>\n                  <p className={styles.tweetText}>{body}</p>\n               </div>\n\n               <div className={styles.stats}>\n                  <Likes\n                     likes={likes}\n                     isLiked={isLiked}\n                     id={id}\n                     handleLike={handleLike}\n                  />\n                  <Comments\n                     handleClick={handleClick}\n                     comments={comments}\n                  />\n               </div>\n               {comments.length > 0 ? <CommentsContainer comments={comments} /> : null}\n            </div>\n\n            {showModal ?\n               <AddComment\n                  handleClick={handleClick}\n                  closeModal={closeModal}\n                  id={id}\n                  user={user}\n                  body={body}\n               />\n               : null}\n         </>\n      )\n   }\n}\n\nexport default TweetPage\n","import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport NewTweet from '../NewTweet/NewTweet'\nimport Spinner from '../Spinner/Spinner'\nimport TweetsContainer from '../TweetsContainer/TweetsContainer'\nimport TweetPage from '../TweetPage/TweetPage'\n\nimport styles from './App.module.css'\nimport TweeetterContext from '../../context/tweeetterContext'\n\nfunction App() {\n  const { getTweets, isLoading } = useContext(TweeetterContext)\n\n  useEffect(() => {\n    getTweets()\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact render={props => (\n            <>\n              <h1>Home</h1>\n              <NewTweet />\n              <TweetsContainer />\n              {isLoading ? <Spinner /> : null}\n            </>\n          )} />\n          <Route path=\"/tweet/:id\" component={TweetPage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","export default (state, action) => {\n   switch (action.type) {\n      case 'SET_LOADING':\n         return {\n            ...state,\n            isLoading: true\n         }\n      case 'SET_TWEETS':\n         return {\n            ...state,\n            tweets: [...state.tweets, ...action.payload],\n            isLoading: false\n         }\n      case 'POST_TWEET':\n         return {\n            ...state,\n            tweets: [action.payload, ...state.tweets]\n         }\n      case 'LIKE_TWEET':\n         return {\n            ...state,\n            tweets: state.tweets.map(tweet => {\n               if (tweet.id === action.payload) {\n                  if (tweet.isLiked) {\n                     return { ...tweet, isLiked: false, likes: tweet.likes - 1 }\n                  } else {\n                     return { ...tweet, isLiked: true, likes: tweet.likes + 1 }\n                  }\n               } else {\n                  return tweet\n               }\n            })\n         }\n      case 'ADD_COMMENT':\n         return {\n            ...state,\n            tweets: state.tweets.map(tweet => {\n               if (tweet.id === action.payload.id) {\n                  return { ...tweet, comments: [action.payload.comment, ...tweet.comments] }\n               } else {\n                  return tweet\n               }\n            })\n         }\n      default:\n         return {\n            ...state\n         }\n   }\n}","import React, { useReducer, useEffect } from 'react'\nimport uuid from 'react-uuid'\nimport TweeetterContext from './tweeetterContext'\nimport TweeetterReducer from './tweeetterReducer'\n\n// Localstorage library\nvar store = require('store')\n\nconst TweeetterState = (props) => {\n   const initialState = {\n      tweets: [],\n      isLoading: false,\n   }\n\n   const [state, dispatch] = useReducer(TweeetterReducer, initialState)\n\n   // Update localstorage when state.tweets change\n   useEffect(() => {\n      if (state.tweets.length > 0) {\n         store.set('tweets', state.tweets)\n      }\n   }, [state.tweets])\n\n\n   // Fetches data to fill tweets\n   const getTweets = async () => {\n      setLoading()\n\n      if (!store.get('tweets')) {\n         let users = []\n         let posts = []\n\n         try {\n            const request = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\n            const response = await request.json()\n            posts = response\n         } catch (e) {\n            console.log(e)\n         }\n\n         try {\n            const request = await fetch('https://randomuser.me/api/?exc=gender,location,email,login,registered,dob,phone,cell,nat&results=10')\n            const response = await request.json()\n            users = response.results\n         } catch (e) {\n            console.log(e)\n         }\n\n         createPosts(users, posts)\n\n      } else {\n         setTimeout(() => {\n            dispatch({ type: 'SET_TWEETS', payload: store.get('tweets') })\n         }, 1500);\n      }\n   }\n\n   // Generates comments\n   const generateComments = async () => {\n      const amount = Number((Math.random() * 8).toFixed())\n\n      let text = []\n      let users = []\n      let comments = []\n\n      try {\n         const request = await fetch(`https://jsonplaceholder.typicode.com/posts?_limit=${amount}`)\n         const response = await request.json()\n         text = response\n      } catch (e) {\n         console.log(e)\n      }\n\n      try {\n         const request = await fetch(`https://randomuser.me/api/?exc=gender,location,email,login,registered,dob,phone,cell,nat&results=${amount}`)\n         const response = await request.json()\n\n         users = response.results\n      } catch (e) {\n         console.log(e)\n      }\n\n      for (let i = 0; i < amount; i++) {\n         let comment = {}\n\n         comment.text = text[i].body\n         comment.user = `${users[i].name.first} ${users[i].name.last}`\n         comment.pic = users[i].picture.medium\n\n         comments.push(comment)\n      }\n\n      return comments\n   }\n\n   // Creates tweets and populates feeds\n   const createPosts = async (users, posts) => {\n      let tweets = []\n\n      for (let i = 0; i < users.length; i++) {\n         let tweet = {}\n\n         tweet.id = uuid()\n         tweet.pic = users[i].picture.medium\n         tweet.user = `${users[i].name.first} ${users[i].name.last}`\n         tweet.body = posts[i].body\n         tweet.likes = Number((Math.random() * 30).toFixed())  // Generates random amount of likes between 0 and 30\n         tweet.isLiked = false\n         tweet.comments = await generateComments()\n\n         tweets.push(tweet)\n      }\n\n      dispatch({ type: 'SET_TWEETS', payload: tweets })\n   }\n\n   // Post new tweet\n   const postTweet = (tweet) => {\n      dispatch({ type: 'POST_TWEET', payload: tweet })\n   }\n\n   // Like tweet\n   const likeTweet = (id) => {\n      dispatch({ type: 'LIKE_TWEET', payload: id })\n   }\n\n   // Add comment\n   const addComment = (id, comment) => {\n      dispatch({ type: 'ADD_COMMENT', payload: { id, comment } })\n   }\n\n   // Set Loading\n   const setLoading = () => dispatch({ type: \"SET_LOADING\" })\n\n   return (\n      <TweeetterContext.Provider value={{\n         tweets: state.tweets,\n         isLoading: state.isLoading,\n         getTweets,\n         postTweet,\n         likeTweet,\n         addComment\n      }}>\n         {props.children}\n      </TweeetterContext.Provider>\n   )\n}\n\nexport default TweeetterState","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\nimport TweeetterState from './context/TweeetterState'\n\nReactDOM.render(\n   <TweeetterState>\n      <App />\n   </TweeetterState>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"TweetPage_nav__3LXI0\",\"iconContainer\":\"TweetPage_iconContainer__3cX5p\",\"tweetPage\":\"TweetPage_tweetPage__1vtxg\",\"user\":\"TweetPage_user__WPxWl\",\"tweetText\":\"TweetPage_tweetText__3Sdyw\",\"stats\":\"TweetPage_stats__91vFL\",\"comments\":\"TweetPage_comments__3aUq-\",\"modal\":\"TweetPage_modal__r9zhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tweetContainer\":\"Tweet_tweetContainer__1o0T8\",\"imgContainer\":\"Tweet_imgContainer__3y0oe\",\"title\":\"Tweet_title__ygZgp\",\"stats\":\"Tweet_stats__3n9Ay\",\"likes\":\"Tweet_likes__2Edel\",\"comments\":\"Tweet_comments__2sE8c\"};"],"sourceRoot":""}